{"version":3,"sources":["views/dropbox-auth/DropboxAuth.js","app.js","index.js"],"names":["DropboxOAuthSample","props","state","isDropboxInit","apiToken","verification","uuidV4","Linking","addEventListener","event","handleLinkingUrl","removeEventListener","url","match","query_string","query","shittyQs","this","setState","access_token","alert","openURL","catch","err","console","error","instruction","View","style","styles","container","Button","title","onPress","loginWithDropbox","Text","instructions","Component","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginTop","textAlign","color","marginBottom","App","className","exact","path","component","DropboxAuth","ReactDOM","render","document","getElementById"],"mappings":"mUAMqBA,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,eAAe,EACfC,SAAU,GACVC,aAAcC,OALC,E,qDASnB,WAAqB,IAAD,OAClBC,IAAQC,iBAAiB,OAAO,SAACC,GAAD,OAAW,EAAKC,iBAAiBD,Q,kCAGnE,WAAwB,IAAD,OACrBF,IAAQI,oBAAoB,OAAO,SAACF,GAAD,OAAW,EAAKC,iBAAiBD,Q,8BAGtE,SAAiBA,GACf,IAAI,EAAmBA,EAAMG,IAAIC,MAAM,QAAhCC,EAAP,oBACIC,EAAQC,IAASF,GAEjBG,KAAKf,MAAMG,eAAiBU,EAAMb,MACpCe,KAAKC,SAAS,CAACf,eAAc,EAAKC,SAASW,EAAMI,eAEjDC,MAAM,sB,8BAIV,WACE,IACMR,EAAG,gFAjCW,kBAiCX,yBADY,mDACZ,kBAAkIK,KAAKf,MAAMG,cACtJE,IAAQc,QAAQT,GAAKU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,oBAAqBF,Q,oBAGvE,WAAU,IAAD,OACDG,EAAcT,KAAKf,MAAMC,cAAgB,uBAAyBc,KAAKf,MAAME,SAAW,wDAC9F,OACE,eAACuB,EAAA,EAAD,CAAMC,MAAOC,EAAOC,UAApB,UACE,cAACC,EAAA,EAAD,CAAQC,MAAM,qCAAqCC,QAAS,kBAAM,EAAKC,sBACvE,cAACC,EAAA,EAAD,CAAMP,MAAOC,EAAOO,aAApB,SACGV,W,GA1CqCW,aAiD1CR,EAASS,IAAWC,OAAO,CAC/BT,UAAW,CACTU,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,WAEnBP,aAAc,CACZQ,UAAW,GACXC,UAAW,SACXC,MAAO,UACPC,aAAc,KChDHC,EAbH,WACV,OACE,qBAAKC,UAAU,mCAAf,SAEE,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,W,cCH3CC,IAASC,OAEP,cAAC,IAAD,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.d0afef1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, Linking, Button, Platform } from 'react-native';\nimport uuidV4 from 'uuid/v4';\nimport shittyQs from 'shitty-qs';\n\nconst DROPBOX_APP_KEY = 'c3hbpngaqu240bf';\nexport default class DropboxOAuthSample extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropboxInit: false,\n      apiToken: '',\n      verification: uuidV4(),\n    }\n  }\n\n  componentDidMount() {\n    Linking.addEventListener('url', (event) => this.handleLinkingUrl(event));\n  }\n\n  componentWillUnmount() {\n    Linking.removeEventListener('url', (event) => this.handleLinkingUrl(event));\n  }\n\n  handleLinkingUrl(event) {\n    var [, query_string] = event.url.match(/(.*)/);\n    var query = shittyQs(query_string);\n\n    if (this.state.verification === query.state) {\n      this.setState({isDropboxInit:true,apiToken:query.access_token})\n    } else {\n      alert(\"Invalid checksum\");\n    }\n  }\n\n  loginWithDropbox() {\n    const redirect_uri = \"http://localhost:3200/api/dropbox/oauth_callback\"\n    const url = `https://www.dropbox.com/oauth2/authorize?response_type=code&client_id=${DROPBOX_APP_KEY}&redirect_uri=${redirect_uri}&state=${this.state.verification}`;\n    Linking.openURL(url).catch(err => console.error('An error occurred', err));\n  }\n\n  render() {\n    const instruction = this.state.isDropboxInit ? 'Dropbox API token : ' + this.state.apiToken : 'You are not already connected to your Dropbox account';\n    return (\n      <View style={styles.container}>\n        <Button title='Connect my Dropbox account to IPFS' onPress={() => this.loginWithDropbox()} />\n        <Text style={styles.instructions}>\n          {instruction}\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  instructions: {\n    marginTop: 32,\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { DropboxAuth } from \"./views/dropbox-auth\";\n\nconst App = () => {\n  return (\n    <div className=\"app-container d-flex flex-column\">\n\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={DropboxAuth} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./scss/index.scss\";\n\nReactDOM.render(\n\n  <Router>\n    <App />\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}