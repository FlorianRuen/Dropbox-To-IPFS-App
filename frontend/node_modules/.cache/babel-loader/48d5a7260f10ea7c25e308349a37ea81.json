{"ast":null,"code":"var parseShittyQueryString = function (q) {\n  // Check if given piece of shit is a string\n  if (typeof q !== 'string') {\n    return {};\n  } // Remove fucking question mark\n\n\n  if (q[0] === '?') {\n    q = q.slice(1);\n  } // TRIM TRIM\n\n\n  q = q.trim(); // IS IT EMPTY?\n\n  if (!q.length) {\n    return {};\n  }\n\n  return q.replace(/\\+/g, ' ').split('&').reduce(function (r, p) {\n    var kv = p.split('=');\n    var key = kv[0];\n    var val = kv[1];\n\n    try {\n      key = decodeURIComponent(key);\n    } catch (WTF) {// wtf Johny?\n    }\n\n    try {\n      val = val === undefined ? null : decodeURIComponent(val);\n    } catch (WTF) {// WTF?\n    }\n\n    if (!r.hasOwnProperty(key)) {\n      r[key] = val;\n    } else if (Array.isArray(r[key])) {\n      r[key].push(val);\n    } else {\n      r[key] = [r[key], val];\n    }\n\n    return r;\n  }, {});\n};\n\nmodule.exports = parseShittyQueryString;","map":{"version":3,"sources":["/home/florian/VSCodeProjects/PL-Launchpad-Dropbox-To-IPFS-Dropbox-App/frontend/node_modules/shitty-qs/index.js"],"names":["parseShittyQueryString","q","slice","trim","length","replace","split","reduce","r","p","kv","key","val","decodeURIComponent","WTF","undefined","hasOwnProperty","Array","isArray","push","module","exports"],"mappings":"AAAA,IAAIA,sBAAsB,GAAG,UAASC,CAAT,EAAY;AACxC;AACA,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AAC1B,WAAO,EAAP;AACA,GAJuC,CAMxC;;;AACA,MAAIA,CAAC,CAAC,CAAD,CAAD,KAAS,GAAb,EAAkB;AACjBA,IAAAA,CAAC,GAAGA,CAAC,CAACC,KAAF,CAAQ,CAAR,CAAJ;AACA,GATuC,CAWxC;;;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACE,IAAF,EAAJ,CAZwC,CAcxC;;AACA,MAAI,CAACF,CAAC,CAACG,MAAP,EAAe;AACd,WAAO,EAAP;AACA;;AAED,SAAOH,CAAC,CAACI,OAAF,CAAU,KAAV,EAAiB,GAAjB,EAAsBC,KAAtB,CAA4B,GAA5B,EAAiCC,MAAjC,CAAwC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC7D,QAAIC,EAAE,GAAGD,CAAC,CAACH,KAAF,CAAQ,GAAR,CAAT;AACA,QAAIK,GAAG,GAAGD,EAAE,CAAC,CAAD,CAAZ;AACA,QAAIE,GAAG,GAAGF,EAAE,CAAC,CAAD,CAAZ;;AAEA,QAAI;AACHC,MAAAA,GAAG,GAAGE,kBAAkB,CAACF,GAAD,CAAxB;AACC,KAFF,CAEG,OAAOG,GAAP,EAAY,CACd;AACA;;AAED,QAAI;AACHF,MAAAA,GAAG,GAAGA,GAAG,KAAKG,SAAR,GAAoB,IAApB,GAA2BF,kBAAkB,CAACD,GAAD,CAAnD;AACA,KAFD,CAEE,OAAOE,GAAP,EAAY,CACb;AACA;;AAED,QAAI,CAACN,CAAC,CAACQ,cAAF,CAAiBL,GAAjB,CAAL,EAA4B;AAC3BH,MAAAA,CAAC,CAACG,GAAD,CAAD,GAASC,GAAT;AACA,KAFD,MAEO,IAAIK,KAAK,CAACC,OAAN,CAAcV,CAAC,CAACG,GAAD,CAAf,CAAJ,EAA2B;AACjCH,MAAAA,CAAC,CAACG,GAAD,CAAD,CAAOQ,IAAP,CAAYP,GAAZ;AACA,KAFM,MAEA;AACNJ,MAAAA,CAAC,CAACG,GAAD,CAAD,GAAS,CAACH,CAAC,CAACG,GAAD,CAAF,EAASC,GAAT,CAAT;AACA;;AAED,WAAOJ,CAAP;AACA,GA1BM,EA0BJ,EA1BI,CAAP;AA2BA,CA9CD;;AAgDAY,MAAM,CAACC,OAAP,GAAiBrB,sBAAjB","sourcesContent":["var parseShittyQueryString = function(q) {\n\t// Check if given piece of shit is a string\n\tif (typeof q !== 'string') {\n\t\treturn {};\n\t}\n\n\t// Remove fucking question mark\n\tif (q[0] === '?') {\n\t\tq = q.slice(1);\n\t}\n\n\t// TRIM TRIM\n\tq = q.trim();\n\n\t// IS IT EMPTY?\n\tif (!q.length) {\n\t\treturn {};\n\t}\n\n\treturn q.replace(/\\+/g, ' ').split('&').reduce(function(r, p) {\n\t\tvar kv = p.split('=');\n\t\tvar key = kv[0];\n\t\tvar val = kv[1];\n\n\t\ttry {\n\t\t\tkey = decodeURIComponent(key);\n\t \t} catch (WTF) {\n\t\t\t// wtf Johny?\n\t\t}\n\n\t\ttry {\n\t\t\tval = val === undefined ? null : decodeURIComponent(val);\n\t\t} catch (WTF) {\n\t\t\t// WTF?\n\t\t}\n\n\t\tif (!r.hasOwnProperty(key)) {\n\t\t\tr[key] = val;\n\t\t} else if (Array.isArray(r[key])) {\n\t\t\tr[key].push(val);\n\t\t} else {\n\t\t\tr[key] = [r[key], val];\n\t\t}\n\n\t\treturn r;\n\t}, {});\n};\n\nmodule.exports = parseShittyQueryString;\n"]},"metadata":{},"sourceType":"script"}