{"ast":null,"code":"var _jsxFileName = \"/home/florian/VSCodeProjects/PL-Launchpad-Dropbox-To-IPFS-Dropbox-App/frontend/src/views/dropbox-auth/DropboxAuth.js\";\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, Linking, Button, Platform } from 'react-native';\nconst DROPBOX_APP_KEY = 'bol535f38zp9krv'; //change with your app key this one is not valid\n\nimport uuidV4 from 'uuid/v4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DropboxAuth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropboxInit: false,\n      apiToken: '',\n      verification: uuidV4()\n    };\n  }\n\n  componentDidMount() {\n    Linking.addEventListener('url', event => this.handleLinkingUrl(event));\n  }\n\n  componentWillUnmount() {\n    Linking.removeEventListener('url', event => this.handleLinkingUrl(event));\n  }\n\n  handleLinkingUrl(event) {}\n\n  loginWithDropbox() {}\n\n  render() {\n    const instruction = this.state.isDropboxInit ? 'Dropbox API token : ' + this.state.apiToken : 'Vous ne vous êtes pas encore connecté';\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"Se connecter avec Dropbox\",\n        onPress: () => this.loginWithDropbox()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.instructions,\n        children: instruction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  instructions: {\n    marginTop: 32,\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["/home/florian/VSCodeProjects/PL-Launchpad-Dropbox-To-IPFS-Dropbox-App/frontend/src/views/dropbox-auth/DropboxAuth.js"],"names":["React","Component","StyleSheet","Text","View","Linking","Button","Platform","DROPBOX_APP_KEY","uuidV4","DropboxAuth","constructor","props","state","isDropboxInit","apiToken","verification","componentDidMount","addEventListener","event","handleLinkingUrl","componentWillUnmount","removeEventListener","loginWithDropbox","render","instruction","styles","container","instructions","create","flex","justifyContent","alignItems","backgroundColor","marginTop","textAlign","color","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,QAAlD,QAAkE,cAAlE;AAEA,MAAMC,eAAe,GAAG,iBAAxB,C,CAA0C;;AAC1C,OAAOC,MAAP,MAAmB,SAAnB;;AAEA,eAAe,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAEjDU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,KADJ;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,YAAY,EAAEP,MAAM;AAHT,KAAb;AAKD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,OAAO,CAACa,gBAAR,CAAyB,KAAzB,EAAgCC,KAAK,IAAI,KAAKC,gBAAL,CAAsBD,KAAtB,CAAzC;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrBhB,IAAAA,OAAO,CAACiB,mBAAR,CAA4B,KAA5B,EAAmCH,KAAK,IAAI,KAAKC,gBAAL,CAAsBD,KAAtB,CAA5C;AACD;;AAEDC,EAAAA,gBAAgB,CAACD,KAAD,EAAQ,CAAE;;AAE1BI,EAAAA,gBAAgB,GAAG,CAAE;;AAErBC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKZ,KAAL,CAAWC,aAAX,GAChB,yBAAyB,KAAKD,KAAL,CAAWE,QADpB,GAEhB,uCAFJ;AAGA,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEW,MAAM,CAACC,SAApB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,2BAAd;AAA0C,QAAA,OAAO,EAAE,MAAM,KAAKJ,gBAAL;AAAzD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACE,YAApB;AAAA,kBAAmCH;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAjCgD;AAoCnD,MAAMC,MAAM,GAAGxB,UAAU,CAAC2B,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BL,EAAAA,YAAY,EAAE;AACZM,IAAAA,SAAS,EAAE,EADC;AAEZC,IAAAA,SAAS,EAAE,QAFC;AAGZC,IAAAA,KAAK,EAAE,SAHK;AAIZC,IAAAA,YAAY,EAAE;AAJF;AAPiB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, Text, View, Linking, Button, Platform } from 'react-native'\n\nconst DROPBOX_APP_KEY = 'bol535f38zp9krv' //change with your app key this one is not valid\nimport uuidV4 from 'uuid/v4'\n\nexport default class DropboxAuth extends Component {\n    \n  constructor(props) {\n    super(props)\n    this.state = {\n      isDropboxInit: false,\n      apiToken: '',\n      verification: uuidV4(),\n    }\n  }\n\n  componentDidMount() {\n    Linking.addEventListener('url', event => this.handleLinkingUrl(event))\n  }\n\n  componentWillUnmount() {\n    Linking.removeEventListener('url', event => this.handleLinkingUrl(event))\n  }\n\n  handleLinkingUrl(event) {}\n\n  loginWithDropbox() {}\n\n  render() {\n    const instruction = this.state.isDropboxInit\n      ? 'Dropbox API token : ' + this.state.apiToken\n      : 'Vous ne vous êtes pas encore connecté'\n    return (\n      <View style={styles.container}>\n        <Button title=\"Se connecter avec Dropbox\" onPress={() => this.loginWithDropbox()} />\n        <Text style={styles.instructions}>{instruction}</Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  instructions: {\n    marginTop: 32,\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n})"]},"metadata":{},"sourceType":"module"}